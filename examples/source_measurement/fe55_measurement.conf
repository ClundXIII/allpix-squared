# Global configuration
[Allpix]
# Simulate a total of 5 events
number_of_events = 1000
# Use the short logging format
log_format = "SHORT"
# Location of the detector configuration
detectors_file = "detector.conf" 
model_paths = ./
# Read and instantiate the detectors and construct the Geant4 geometry
[GeometryBuilderGeant4]
world_material = "air"

# Initialize physics list and particle source
[DepositionGeant4]
# Use a Geant4 physics lists with EMPhysicsStandard_option3 enabled
physics_list = FTFP_BERT_EMY
# Use a charged pion as particle
particle_type = "gamma"
# Set the energy of the particle
#beam_energy_type = "Gauss"
#beam_energy = 6.49keV
beam_energy_type = "User"
beam_hist_point = [[5.9keV,28,0.1keV],[6.49keV,2.85,0.1keV]]
beam_size = 300um
beam_divergence = 15deg 15deg
# Set the energy spread of the generated paricle beam
beam_energy_spread = 0.1keV
# Origin of the beam
beam_position = 0 0 -0.1mm
# The direction of the beam
beam_direction = 0 0 1
# Use a single particle in a single 'event'
number_of_particles = 1
max_step_length = 5.0um
enable_pai = true

[ElectricFieldReader]
model="linear"
bias_voltage=-150V
depletion_voltage=-100V


# Propagate the charge carriers through the sensor
[GenericPropagation]
# Set the temperature of the sensor
temperature = 293K
# Propagate multiple charges at once
charge_per_step = 100

# Transfer the propagated charges to the pixels
[SimpleTransfer]
max_depth_distance = 10um

# Digitize the propagated charges
[DefaultDigitizer]
# Noise added by the readout electronics
electronics_noise = 28e
# Threshold for a hit to be detected
threshold = 0e
# Threshold dispersion
threshold_smearing = 0e
# Noise added by the digitisation
adc_smearing = 0e
adc_resolution = 16
adc_slope=3.7e
gain = 8
output_plots=true

# Save histograms to the ROOT output file
[DetectorHistogrammer]
# Save histograms for the "dut" detector only
#name = "dut"

# Store all simulated objects to a ROOT file with TTrees
[ROOTObjectWriter]
# File name of the output file
file_name = "output_fe55_measurement.root"
# Ignore initially deposited charges and propagated carriers:
#exclude = DepositedCharge, PropagatedCharge

